/************************************************************************************************
* DISCLAIMER
* This software is supplied by Renesas Electronics Corporation and is only
* intended for use with Renesas products. No other uses are authorized.
* This software is owned by Renesas Electronics Corporation and is protected under
* all applicable laws, including copyright laws.
* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES
* REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY,
* INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
* PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY
* DISCLAIMED.
* TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS
* ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE
* FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES
* FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS
* AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
* Renesas reserves the right, without notice, to make changes to this
* software and to discontinue the availability of this software.
* By using this software, you agree to the additional terms and
* conditions found by accessing the following link:
* http://www.renesas.com/disclaimer
*************************************************************************************************/
/* Copyright (C) 2012 (2013-2016) Renesas Electronics Corporation. All rights reserved.         */
/*""FILE COMMENT""*******************************************************************************
* File Name     : R_SIO_csi.h.rl78g14
* Version       : 2.05
* Device(s)     : RL78/G14
* Tool-Chain    : -
*               : 
* OS            : -
* H/W Platform  : -
* Description   : SIO driver SAU I/F module(CSI mode) common definitions
* Operation     : -
* Limitations   : -
*************************************************************************************************
* History       : DD.MM.YYYY    Version Description
*               : 27.04.2012    2.02    Created for RL78/G14.(Base line : for 78K0R/KE3-L)
*               : 24.08.2012    2.02    Changed format.
*               : 24.08.2012    2.02    Changed comments of all "Reserve bit".
*               : 24.08.2012    2.02    Changed comment of "SIO_USO_INIT".
*               : 24.08.2012    2.02    Changed comment of "SIO_USOL_INIT".(Added caution)
*               : 24.08.2012    2.02    Added "SET" to SIO_DATAO_INIT() and SIO_CLK_INIT().
*               : 24.08.2012    2.02    Changed setting to "SIO_SOL"  at SIO_DISABLE() and SIO_ENABLE().
*               : 24.08.2012    2.02    ---------------------------------------------------------
*               : 30.09.2013    2.03    Supported IAR Embedded Workbench for Renesas RL78.
*               : 30.09.2013    2.03    ---------------------------------------------------------
*               : 31.03.2014    2.03.R01 Changed file name.
*               : 01.30.2015    2.04    Corrected comments.
*               : 31.03.2016    2.05    Supported CC-RL.
*************************************************************************************************/
#ifndef __SIO_CSI_H__
#define __SIO_CSI_H__


/************************************************************************************************
Macro definitions
*************************************************************************************************/
/*----------------------------------------------------------------------------------------------*/
/*   Define the combination of the MCU's resources.                                             */
/*----------------------------------------------------------------------------------------------*/
//#define SIO_OPTION_1  /* Low speed    */  /* SI/O                                             */  /** SET **/
#define SIO_OPTION_2    /* Low speed    */  /* SI/O     + CRC calculation (S/W)                 */  /** SET **/


/*----------------------------------------------------------------------------------------------*/
/*   Define the CRC calculation.                                                                */
/*----------------------------------------------------------------------------------------------*/
#define SIO_CRCCCITT_USED                   /* CRC-CCITT used                                   */  /** SET **/
#define SIO_CRC7_USED                       /* CRC7 used                                        */  /** SET **/


/*----------------------------------------------------------------------------------------------*/
/*   Define the control port.                                                                   */
/*   Delete comment of a related macrodefinition, and please validate setting.                  */
/*----------------------------------------------------------------------------------------------*/
#ifdef __CA78K0R__                              /* Renesas RL78 Compiler                        */
    #define SIO_PM_DATAO        PM14.4          /* SIO DataOut                                  */  /** SET **/
    #define SIO_PM_DATAI        PM14.3          /* SIO DataIn                                   */  /** SET **/
    #define SIO_PM_CLK          PM14.2          /* SIO CLK                                      */  /** SET **/
    #define SIO_P_DATAO         P14.4           /* SIO DataOut                                  */  /** SET **/
    #define SIO_P_DATAI         P14.3           /* SIO DataIn                                   */  /** SET **/
    #define SIO_P_CLK           P14.2           /* SIO CLK                                      */  /** SET **/
    #define SIO_PIM_DATAI       PIM14.3         /* SIO DataIn                                   */  /** SET **/
    #define SIO_PIM_CLK         PIM14.2         /* SIO CLK                                      */  /** SET **/
    #define SIO_POM_DATAO       POM14.4         /* SIO DataOut                                  */  /** SET **/
    #define SIO_POM_CLK         POM14.2         /* SIO CLK                                      */  /** SET **/

    #define SIO_SAUEN           SAU1EN          /* Control of CSI30 input clock supply          */  /** SET **/
#endif  /* __CA78K0R__ */
#ifdef __CCRL__                                 /* Renesas CC-RL Compiler                       */
    #define SIO_PM_DATAO        PM14_bit.no4    /* SIO DataOut                                  */  /** SET **/
    #define SIO_PM_DATAI        PM14_bit.no3    /* SIO DataIn                                   */  /** SET **/
    #define SIO_PM_CLK          PM14_bit.no2    /* SIO CLK                                      */  /** SET **/
    #define SIO_P_DATAO         P14_bit.no4     /* SIO DataOut                                  */  /** SET **/
    #define SIO_P_DATAI         P14_bit.no3     /* SIO DataIn                                   */  /** SET **/
    #define SIO_P_CLK           P14_bit.no2     /* SIO CLK                                      */  /** SET **/
    #define SIO_PIM_DATAI       PIM14_bit.no3   /* SIO DataIn                                   */  /** SET **/
    #define SIO_PIM_CLK         PIM14_bit.no2   /* SIO CLK                                      */  /** SET **/
    #define SIO_POM_DATAO       POM14_bit.no4   /* SIO DataOut                                  */  /** SET **/
    #define SIO_POM_CLK         POM14_bit.no2   /* SIO CLK                                      */  /** SET **/

    #define SIO_SAUEN           SAU1EN          /* Control of CSI30 input clock supply          */  /** SET **/
#endif  /* __CCRL__ */
#ifdef __ICCRL78__                              /* IAR RL78 Compiler                            */
    #define SIO_PM_DATAO        PM14_bit.no4    /* SIO DataOut                                  */  /** SET **/
    #define SIO_PM_DATAI        PM14_bit.no3    /* SIO DataIn                                   */  /** SET **/
    #define SIO_PM_CLK          PM14_bit.no2    /* SIO CLK                                      */  /** SET **/
    #define SIO_P_DATAO         P14_bit.no4     /* SIO DataOut                                  */  /** SET **/
    #define SIO_P_DATAI         P14_bit.no3     /* SIO DataIn                                   */  /** SET **/
    #define SIO_P_CLK           P14_bit.no2     /* SIO CLK                                      */  /** SET **/
    #define SIO_PIM_DATAI       PIM14_bit.no3   /* SIO DataIn                                   */  /** SET **/
    #define SIO_PIM_CLK         PIM14_bit.no2   /* SIO CLK                                      */  /** SET **/
    #define SIO_POM_DATAO       POM14_bit.no4   /* SIO DataOut                                  */  /** SET **/
    #define SIO_POM_CLK         POM14_bit.no2   /* SIO CLK                                      */  /** SET **/

    #define SIO_SAUEN           SAU1EN          /* Control of CSI30 input clock supply          */  /** SET **/
#endif  /* __ICCRL78__ */

/*----------------- SIO definitions -----------------*/

#ifdef __CA78K0R__                              /* Renesas RL78 Compiler                        */
    /* CSI30 setting example - Set the following for the system. */
    #define SIO_SPS             SPS1            /* Serial clock select register                 */  /** SET **/
    #define SIO_SMR             SMR12           /* Serial mode register                         */  /** SET **/
    #define SIO_SCR             SCR12           /* Serial communication operation setting register  */  /** SET **/
    #define SIO_SDR             SDR12           /* Serial data register                         */  /** SET **/
    #define SIO_TXBUF           SIO30           /* SIOp data register                           */  /** SET **/
    #define SIO_RXBUF           SIO30           /* SIOp data register                           */  /** SET **/
    #define SIO_SIR             SIR12           /* Serial flag clear trigger register           */  /** SET **/
    #define SIO_SSR             SSR12           /* Serial status register                       */  /** SET **/
    #define SIO_SS              SS1L.2          /* Serial channel start register SSmn           */  /** SET **/
    #define SIO_ST              ST1L.2          /* Serial channel stop register STmn            */  /** SET **/
    #define SIO_SE              SE1L.2          /* Serial channel enable status register SEmn   */  /** SET **/
    #define SIO_SOE             SOE1L.2         /* Serial output enable register SOEmn          */  /** SET **/
    #define SIO_SO              SO1             /* Serial output register SOmn                  */  /** SET **/
    #define SIO_SOL             SOL1            /* Serial output level register                 */  /** SET **/
    #define SIO_SNFEN           NFEN0.6         /* Use of noise filter of RXD pin SNFEN         */  /** SET **/

    #define SIO_TXNEXT          (SSR12L & 0x20) /* CSI Transmit data empty                      */  /** SET **/
    #define SIO_RXNEXT          IF1H.4          /* CSI Receive completion                       */  /** SET **/
    #define SIO_TXEND           IF1H.4          /* CSI Transmit completion                      */  /** SET **/
#endif  /* __CA78K0R__ */
#ifdef __CCRL__                                 /* Renesas CC-RL Compiler                       */
    /* CSI30 setting example - Set the following for the system. */
    #define SIO_SPS             SPS1            /* Serial clock select register                 */  /** SET **/
    #define SIO_SMR             SMR12           /* Serial mode register                         */  /** SET **/
    #define SIO_SCR             SCR12           /* Serial communication operation setting register  */  /** SET **/
    #define SIO_SDR             SDR12           /* Serial data register                         */  /** SET **/
    #define SIO_TXBUF           SIO30           /* SIOp data register                           */  /** SET **/
    #define SIO_RXBUF           SIO30           /* SIOp data register                           */  /** SET **/
    #define SIO_SIR             SIR12           /* Serial flag clear trigger register           */  /** SET **/
    #define SIO_SSR             SSR12           /* Serial status register                       */  /** SET **/
    #define SIO_SS              SS1L_bit.no2    /* Serial channel start register SSmn           */  /** SET **/
    #define SIO_ST              ST1L_bit.no2    /* Serial channel stop register STmn            */  /** SET **/
    #define SIO_SE              SE1L_bit.no2    /* Serial channel enable status register SEmn   */  /** SET **/
    #define SIO_SOE             SOE1L_bit.no2   /* Serial output enable register SOEmn          */  /** SET **/
    #define SIO_SO              SO1             /* Serial output register SOmn                  */  /** SET **/
    #define SIO_SOL             SOL1            /* Serial output level register                 */  /** SET **/
    #define SIO_SNFEN           NFEN0_bit.no6   /* Use of noise filter of RXD pin SNFEN         */  /** SET **/

    #define SIO_TXNEXT          (SSR12L & 0x20) /* CSI Transmit data empty                      */  /** SET **/
    #define SIO_RXNEXT          IF1H_bit.no4    /* CSI Receive completion                       */  /** SET **/
    #define SIO_TXEND           IF1H_bit.no4    /* CSI Transmit completion                      */  /** SET **/
#endif  /* __CCRL__ */
#ifdef __ICCRL78__                              /* IAR RL78 Compiler                            */
    /* CSI30 setting example - Set the following for the system. */
    #define SIO_SPS             SPS1            /* Serial clock select register                 */  /** SET **/
    #define SIO_SMR             SMR12           /* Serial mode register                         */  /** SET **/
    #define SIO_SCR             SCR12           /* Serial communication operation setting register  */  /** SET **/
    #define SIO_SDR             SDR12           /* Serial data register                         */  /** SET **/
    #define SIO_TXBUF           SIO30           /* SIOp data register                           */  /** SET **/
    #define SIO_RXBUF           SIO30           /* SIOp data register                           */  /** SET **/
    #define SIO_SIR             SIR12           /* Serial flag clear trigger register           */  /** SET **/
    #define SIO_SSR             SSR12           /* Serial status register                       */  /** SET **/
    #define SIO_SS              SS1L_bit.no2    /* Serial channel start register SSmn           */  /** SET **/
    #define SIO_ST              ST1L_bit.no2    /* Serial channel stop register STmn            */  /** SET **/
    #define SIO_SE              SE1L_bit.no2    /* Serial channel enable status register SEmn   */  /** SET **/
    #define SIO_SOE             SOE1L_bit.no2   /* Serial output enable register SOEmn          */  /** SET **/
    #define SIO_SO              SO1             /* Serial output register SOmn                  */  /** SET **/
    #define SIO_SOL             SOL1            /* Serial output level register                 */  /** SET **/
    #define SIO_SNFEN           NFEN0_bit.no6   /* Use of noise filter of RXD pin SNFEN         */  /** SET **/

    #define SIO_TXNEXT          (SSR12L & 0x20) /* CSI Transmit data empty                      */  /** SET **/
    #define SIO_RXNEXT          IF1H_bit.no4    /* CSI Receive completion                       */  /** SET **/
    #define SIO_TXEND           IF1H_bit.no4    /* CSI Transmit completion                      */  /** SET **/
#endif  /* __ICCRL78__ */


/*----------- Definitions of resource used -----------*/

#ifdef SIO_OPTION_1
#define SIO_CRC16_BYTE                              /* Calculation by 1Byte unit                */
#endif  /* #ifdef SIO_OPTION_1 */

#ifdef SIO_OPTION_2
#define SIO_SIO_CRCCCITT_USED                       /* Encode by soft CRC-CCITT                 */
#define SIO_CRC16_BYTE                              /* Calculation by 1Byte unit                */
#define SIO_CRC16_MSBF
#endif  /* #ifdef SIO_OPTION_2 */


/* SIO setting */

#define SIO_USCR_NOUSE          (uint16_t)0x0087
                            /*  0000000010000111B   */  /* SCR CSI unused setting               */
                            /*  ++++++++++++++++-- Same as after reset setting                  */

#define SIO_USPS_INIT           (uint16_t)0x0000                                                    /** SET **/
                            /*  0000000000000000B   */  /* SPS CSI initial setting              */  /** SET **/
                            /*  ||||||||||||++++-- CKm0:No division of fclk                     */  /** SET **/
                            /*  ||||||||++++------ CKm1:No division of fclk                     */  /** SET **/
                            /*  ++++++++---------- Reserved     : 0     Fixed                   */


#define SIO_USMR_INIT           (uint16_t)0x0020                                                    /** SET **/
                            /*  0000000000100000B   */  /* SMR CSI initial setting              */
                            /*  |||||||||||||||+-- Interrupt source : Transfer end interrupt    */
                            /*  |||||||||||||++--- Operation mode : CSI mode                    */
                            /*  |||||||||||++----- Reserved     : 0     Fixed                   */
                            /*  ||||||||||+------- Reserved     : 1     Fixed                   */
                            /*  |||||||||+-------- Reserved (Controls in UART mode)             */
                            /*  ||||||||+--------- Reserved     : 0     Fixed                   */
                            /*  |||||||+---------- Start trigger source : Software trigger      */
                            /*  ||+++++----------- Reserved     : 0     Fixed                   */
                            /*  |+---------------- ftclk clock channel setting  : Divided fmck  */
                            /*  +----------------- fMCK clock channel setting   : CKm0 set      */  /** SET **/

#define SIO_USCR_INIT           (uint16_t)0x0007
                            /*  0000000000000111B   */  /* SCR CSI initial setting              */
                            /*  ||||||||||||||++-- Data length          : 8 bit                 */
                            /*  |||||||||||||+---- Reserved     : 1     Fixed                   */
                            /*  ||||||||||||+----- Reserved     : 0     Fixed                   */
                            /*  ||||||||||++------ Stop bit : No Stop bit(CSI mode setting)     */
                            /*  |||||||||+-------- Reserved     : 0     Fixed                   */
                            /*  ||||||||+--------- data transfer sequence : MSB first           */
                            /*  ||||||++---------- Parity bit : No Parity(CSI mode setting)     */
                            /*  |||||+------------ Error interrupt : Disable(CSI mode setting)  */
                            /*  ||||+------------- Reserved     : 0     Fixed                   */
                            /*  ||++-------------- Data and clock phase : Type 1(SPI mode 3)    */
                            /*  |+---------------- RXE setting          : Disable               */
                            /*  +----------------- TXE setting          : Disable               */

#define SIO_USO_INIT            (uint16_t)0x0404    /* Set Unit/Channel No. to use to 1.        */  /** SET **/
                            /*  0000010000000100B   */  /* SOm initial setting                  */  /** SET **/
                            /*  |||||||||||||||+-- SOm0 output                                  */  /** SET **/
                            /*  ||||||||||||||+--- SOm1 output                                  */  /** SET **/
                            /*  |||||||||||||+---- SOm2 output                                  */  /** SET **/
                            /*  ||||||||||||+----- SOm3 output                                  */  /** SET **/
                            /*  ||||||||++++------ Reserved     : 0     Fixed                   */
                            /*  |||||||+---------- CKOm0 output                                 */  /** SET **/
                            /*  ||||||+----------- CKOm1 output                                 */  /** SET **/
                            /*  |||||+------------ CKOm2 output                                 */  /** SET **/
                            /*  ||||+------------- CKOm3 output                                 */  /** SET **/
                            /*  ++++-------------- Reserved     : 0     Fixed                   */

#define SIO_USIR_CLEAR          (uint16_t)0x0007
                            /*  0000000000000111B   */  /* SIR error flag clear setting         */
                            /*  |||||||||||||||+-- Overrun error        : Clear                 */
                            /*  ||||||||||||||+--- Parity error         : Clear                 */
                            /*  |||||||||||||+---- Framing error        : Clear                 */
                            /*  +++++++++++++----- Reserved     : 0     Fixed                   */

#define SIO_USCR_TX             (uint16_t)0x8007
                            /*  1000000000000111B   */  /* SCR CSI TX setting                   */
                            /*  ||||||||||||||++-- Data length          : 8 bit                 */
                            /*  |||||||||||||+---- Reserved     : 1     Fixed                   */
                            /*  ||||||||||||+----- Reserved     : 0     Fixed                   */
                            /*  ||||||||||++------ Stop bit : No Stop bit(CSI mode setting)     */
                            /*  |||||||||+-------- Reserved     : 0     Fixed                   */
                            /*  ||||||||+--------- data transfer sequence : MSB first           */
                            /*  ||||||++---------- Parity bit : No Parity(CSI mode setting)     */
                            /*  |||||+------------ Error interrupt : Disable(CSI mode setting)  */
                            /*  ||||+------------- Reserved     : 0     Fixed                   */
                            /*  ||++-------------- Data and clock phase : Type 1(SPI mode 3)    */
                            /*  |+---------------- RXE setting          : Disable               */
                            /*  +----------------- TXE setting          : Enable                */

#define SIO_USCR_TRX            (uint16_t)0xC007
                            /*  1100000000000111B   */  /* SCR CSI TRX setting                  */
                            /*  ||||||||||||||++-- Data length          : 8 bit                 */
                            /*  |||||||||||||+---- Reserved     : 1     Fixed                   */
                            /*  ||||||||||||+----- Reserved     : 0     Fixed                   */
                            /*  ||||||||||++------ Stop bit : No Stop bit(CSI mode setting)     */
                            /*  |||||||||+-------- Reserved     : 0     Fixed                   */
                            /*  ||||||||+--------- data transfer sequence : MSB first           */
                            /*  ||||||++---------- Parity bit : No Parity(CSI mode setting)     */
                            /*  |||||+------------ Error interrupt  : Disable(CSI mode setting) */
                            /*  ||||+------------- Reserved     : 0     Fixed                   */
                            /*  ||++-------------- Data and clock phase : Type 1(SPI mode 3)    */
                            /*  |+---------------- RXE setting          : Enable                */
                            /*  +----------------- TXE setting          : Enable                */

#define SIO_USOL_INIT           (uint16_t)0xFFFE
                            /*  1111111111111110B   */  /* SOLm initial setting(CSI mode setting)  */  /** SET **/
                            /*  |||||||||||||||+-- SOLm0 Communication data is output :            */  /** SET **/
                            /*  ||||||||||||||+--- Reserved     : 1     Fixed                      */
                            /*  |||||||||||||+---- SOLm2 Communication data is output :            */  /** SET **/
                            /*  +++++++++++++----- Reserved     : 1     Fixed                      */
                            /*                                                                     */
                            /* Caution: Refer to the application note for setting method.          */  /** SET **/
                            /*          Set Unit/Channel No. and reserved bit to use to 1.         */  /** SET **/
                            /*          Because 0 is written to a register by setting 1.           */  /** SET **/


#define SIO_DUMMY_DATA          (uint8_t)0xFF       /* Dummy data for receiving data            */


/*----------------------------------------------------------------------------------------------*/
/*   Define the wait time for timeout.                                                          */
/*   Time out is occurred after 50000 times loop process of wait time.                          */
/*----------------------------------------------------------------------------------------------*/
#define SIO_T_SAU_WAIT          (uint16_t)(1)       /* 0.25us wait When CPU clock = 32MHz       */


/*----------------- DMAC definitions -----------------*/
#ifdef SIO_DMA_ON
#endif  /* #ifdef SIO_DMA_ON */

/*----------------- CRC definitions ------------------*/
#if (defined(SIO_CRCCCITT_USED) && defined(SIO_CRC16_HARD))
#endif  /* #if (defined(SIO_CRCCCITT_USED) && defined(SIO_CRC16_HARD)) */


/*-------------- CRC snoop definitions ---------------*/


/*---- Definitions of resource used for debugging ----*/
#if 0
#define SIO_OPTION_TEST                                 /* Resource used for debugging is effective */
#endif
#ifdef SIO_OPTION_TEST
#undef SIO_CRC16_HARD                                   /* Invalid                              */
#undef SIO_CRC16_BYTE                                   /* Invalid                              */
#undef SIO_CRC16_MSBF                                   /* Invalid                              */
#undef SIO_CRC_SNOOP                                    /* Invalid                              */
#undef SIO_DMA_USED                                     /* Invalid                              */
#undef SIO_RRM_UNUSED                                   /* Invalid                              */
#undef SIO_LSBF                                         /* Invalid                              */

//#define SIO_CRC16_HARD                                /* Encode by hard CRC                   */
//#define SIO_CRC16_BYTE                                /* Calculation by 1Byte unit            */
//#define SIO_CRC16_MSBF                                /* CRC MSB first                        */
//#define SIO_DMA_USED                                  /* DMA is used for the data transfer    */
//#define SIO_CRC_SNOOP                                 /* CRC snoop                            */
//#define SIO_RRM_UNUSED                                /* Continuous receive mode disable      */
//#define SIO_LSBF                                      /* SIO LSB first                        */
#endif  /* #ifdef SIO_OPTION_TEST */


/*------------- Definitions of test port -------------*/
/* Definitions of test port use */
#if 0
#define SIO_P_TEST_USED                                 /* Test port use                        */
#endif


/*------------- Definitions of test port -------------*/
#ifdef SIO_P_TEST_USED
#define SIO_P_TEST1                                     /* Test port1                           */
#define SIO_P_TEST2                                     /* Test port2                           */
#define SIO_P_TEST3                                     /* Test port3                           */
#define SIO_D_TEST1                                     /* Test port1                           */
#define SIO_D_TEST2                                     /* Test port2                           */
#define SIO_D_TEST3                                     /* Test port3                           */
#endif  /* #ifdef SIO_P_TEST_USED */


/*------------- Driver use port control --------------*/
#define SIO_IO_INIT() do {                              /* Driver use terminal initial setting  */  \
    SIO_DATAI_INIT();                                                                               \
    SIO_DATAO_INIT();                                                                               \
    SIO_CLK_INIT();                                                                                 \
} while (0)

#define SIO_IO_OPEN() do {                              /* Driver use terminal open setting     */  \
    SIO_DATAI_INIT();                                                                               \
    SIO_DATAO_OPEN();                                                                               \
    SIO_CLK_OPEN();                                                                                 \
} while (0)

/*------------------ DataIn control ------------------*/
#define SIO_DATAI_INIT() do {                           /* DataIn initial setting               */  \
    SIO_SNFEN       = 0;                                /* Noise filter OFF                     */  \
    SIO_PIM_DATAI   = 0;            /** SET **/         /* Normal input buffer                  */  \
    SIO_PM_DATAI    = 1;                                /* DataIn           Input               */  \
} while (0)


/*----------------- DataOut control ------------------*/
#define SIO_DATAO_INIT() do {                           /* DataOut initial setting              */  \
    SIO_POM_DATAO   = 0;            /** SET **/         /* Normal output mode                   */  \
    SIO_P_DATAO     = SIO_HI;                           /* DataOut          "H"                 */  \
    SIO_PM_DATAO    = 0;                                /* DataOut          Output              */  \
    SIO_P_DATAO     = SIO_HI;                           /* DataOut          "H"                 */  \
} while (0)

#define SIO_DATAO_OPEN() do {                           /* DataOut open setting                 */  \
    SIO_PM_DATAO    = 1;                                /* DataOut          Input               */  \
} while (0)


/*------------------- CLK control --------------------*/
#define SIO_CLK_INIT() do {                             /* CLK initial setting                  */  \
    SIO_POM_CLK     = 0;            /** SET **/         /* Normal output mode                   */  \
    SIO_P_CLK       = SIO_HI;                           /* CLK              "H"                 */  \
    SIO_PM_CLK      = 0;                                /* CLK              Output              */  \
    SIO_P_CLK       = SIO_HI;                           /* CLK              "H"                 */  \
} while (0)

#define SIO_CLK_OPEN() do {                             /* CLK open setting                     */  \
    SIO_PIM_CLK     = 0;            /** SET **/         /* Normal input buffer                  */  \
    SIO_PM_CLK      = 1;                                /* CLK              Input               */  \
} while (0)


/*------------------- CSI control -------------------*/

#define SIO_DISABLE(usTmp) do {                         /* CSI disable setting                  */  \
    usTmp     = SIO_SO;                                 /* setting of initial output level      */  \
    SIO_SO    = usTmp | SIO_USO_INIT;                   /*                                      */  \
    SIO_ST    = 1;                                      /* Start disable                        */  \
    SIO_SOE   = 0;                                      /* channel output disable               */  \
    usTmp     = SIO_SO;                                 /* setting of initial output level      */  \
    SIO_SO    = usTmp | SIO_USO_INIT;                   /*                                      */  \
    SIO_SCR   = SIO_USCR_NOUSE;                         /* Same as after reset setting          */  \
    SIO_SMR   = SIO_USMR_INIT;                          /* Same as after reset setting          */  \
    usTmp     = SIO_SOL;                                /* SOL setting(CSI mode setting)        */  \
    SIO_SOL   = usTmp & (~SIO_USOL_INIT);               /*                                      */  \
} while (0)


#define SIO_ENABLE(BR_DATA,usTmp) do {                  /* CSI enable setting                   */  \
    usTmp     = SIO_SPS;                                /* Division setting of CKmn frequency   */  \
    SIO_SPS   = usTmp | SIO_USPS_INIT;                  /*                                      */  \
    SIO_SMR   = SIO_USMR_INIT;                          /* CSI mode setting                     */  \
    SIO_SCR   = SIO_USCR_INIT;                          /* Transmit&receive disable             */  \
    SIO_SDR   = ((uint16_t)BR_DATA << 9);               /* Bit rate setting                     */  \
    SIO_SIR   = SIO_USIR_CLEAR;                         /* Error flag clear setting             */  \
    usTmp     = SIO_SOL;                                /* SOL setting(CSI mode setting)        */  \
    SIO_SOL   = usTmp & (~SIO_USOL_INIT);               /*                                      */  \
} while (0)

#define SIO_TX_ENABLE(usTmp) do {                       /* SIO transmit enable setting          */  \
    SIO_SCR   = SIO_USCR_TX;                            /* Transmit enable                      */  \
    usTmp     = SIO_SO;                                 /* setting of initial output level      */  \
    SIO_SO    = usTmp | SIO_USO_INIT;                   /*                                      */  \
    SIO_SOE   = 1;                                      /* channel output enable                */  \
    SIO_SS    = 1;                                      /* Start enable, BFF clear              */  \
} while (0)

#define SIO_TRX_ENABLE(usTmp) do {                      /* SIO transmit&receive enable setting  */  \
    SIO_SCR   = SIO_USCR_TRX;                           /* Transmit&receive enable              */  \
    usTmp     = SIO_SO;                                 /* setting of initial output level      */  \
    SIO_SO    = usTmp | SIO_USO_INIT;                   /*                                      */  \
    SIO_SOE   = 1;                                      /* channel output enable                */  \
    SIO_SS    = 1;                                      /* Start enable, BFF clear              */  \
} while (0)

#define SIO_TX_DISABLE() do {                           /* SIO transmit disable setting         */  \
    SIO_ST    = 1;                                      /* Start disable                        */  \
    SIO_SOE   = 0;                                      /* channel output disable               */  \
    SIO_SCR   = SIO_USCR_INIT;                          /* Transmit disable                     */  \
} while (0)

#define SIO_TRX_DISABLE() do {                          /* SIO transmit&receive disable setting */  \
    SIO_ST    = 1;                                      /* Start disable                        */  \
    SIO_SOE   = 0;                                      /* channel output disable               */  \
    SIO_SCR   = SIO_USCR_INIT;                          /* Transmit&receive disable             */  \
} while (0)


/*------------------- DMAC control -------------------*/
#define SIO_DMIC_SET()
#ifdef SIO_DMA_ON
#endif  /* #ifdef SIO_DMA_ON */


/*-------------- CRC-CCITT calculation ---------------*/
#ifdef SIO_CRCCCITT_USED
#define SIO_CRC16_CLR()         gSio_Crc16.us = 0x0000
#ifdef MTL_MCU_LITTLE
#define SIO_CRC16_SET(Data, ucTmp) do {                                                             \
    ucTmp            = gSio_Crc16.uc[0];                                                            \
    gSio_Crc16.us    = T_Crc_Ccitt[gSio_Crc16.uc[1] ^ Data];                                        \
    gSio_Crc16.uc[1] = gSio_Crc16.uc[1] ^ ucTmp;                                                    \
} while (0)
#else   /* #ifdef MTL_MCU_LITTLE */
#define SIO_CRC16_SET(Data, ucTmp) do {                                                             \
    ucTmp            = gSio_Crc16.uc[1];                                                            \
    gSio_Crc16.us    = T_Crc_Ccitt[gSio_Crc16.uc[0] ^ Data];                                        \
    gSio_Crc16.uc[0] = gSio_Crc16.uc[0] ^ ucTmp;                                                    \
} while (0)
#endif  /* #ifdef MTL_MCU_LITTLE */ 
#define SIO_CRC16_GET()         gSio_Crc16.us
#endif  /* #ifdef SIO_CRCCCITT_USED */


/*---------------- CRC snoop control -----------------*/


/*------------ LSB data exchange control -------------*/
#ifdef SIO_LSBF
#define SIO_BIT_EXCHG(Data)     T_ExchgBit[Data]        /* Data bit upper lower exchange        */
#else   /* #ifdef SIO_LSBF */
#define SIO_BIT_EXCHG(Data)     Data
#endif  /* #ifdef SIO_LSBF */


/*----------------- Test port control ----------------*/
#ifdef SIO_P_TEST_USED
#define SIO_SET_P_TEST1(Lv)     SIO_P_TEST1 = Lv
#define SIO_SET_P_TEST2(Lv)     SIO_P_TEST2 = Lv
#define SIO_SET_P_TEST3(Lv)     SIO_P_TEST3 = Lv
#define SIO_INIT_P_TEST() do {                                                                      \
} while (0)
#else   /* #ifdef SIO_P_TEST_USED */
#define SIO_SET_P_TEST1(Lv)
#define SIO_SET_P_TEST2(Lv)
#define SIO_SET_P_TEST3(Lv)
#define SIO_INIT_P_TEST()
#endif  /* #ifdef SIO_P_TEST_USED */


/************************************************************************************************
Typedef definitions
*************************************************************************************************/


/************************************************************************************************
Exported global variables
*************************************************************************************************/
#if (defined(SIO_CRCCCITT_USED) && !defined(SIO_CRC16_HARD))
/*""VAL DEF""*/
extern const uint16_t       T_Crc_Ccitt[];          /* CRC-CCITT calculation table              */
/*""VAL DEF END""*/
#endif  /* #if (defined(SIO_CRCCCITT_USED) && !defined(SIO_CRC16_HARD)) */

#ifdef SIO_CRCCCITT_USED
/*""VAL DEF""*/
extern SIO_EXCHG_SHORT FAR  gSio_Crc16;             /* Calculation CRC-CCITT data storage buffer*/
/*""VAL DEF END""*/
#endif  /* #ifdef SIO_CRCCCITT_USED */


/************************************************************************************************
Exported global functions (to be accessed by other files)
*************************************************************************************************/


#endif /* __SIO_CSI_H__ */

/* End of File */
